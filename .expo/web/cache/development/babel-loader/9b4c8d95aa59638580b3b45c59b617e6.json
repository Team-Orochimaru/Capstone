{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/Rob/Capstone/Routes.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { withRouter, Route, Switch } from 'react-router-dom';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar Routes = function (_React$Component) {\n  _inherits(Routes, _React$Component);\n\n  var _super = _createSuper(Routes);\n\n  function Routes() {\n    _classCallCheck(this, Routes);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Routes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      }, \"App Name\"));\n    }\n  }]);\n\n  return Routes;\n}(React.Component);\n\nexport { Routes as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#FF6600'\n  },\n  header: {\n    fontSize: 36,\n    color: '#fff',\n    padding: 30,\n    fontWeight: '700',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/Rob/Capstone/Routes.js"],"names":["StatusBar","React","withRouter","Route","Switch","Routes","styles","container","header","Component","StyleSheet","create","backgroundColor","fontSize","color","padding","fontWeight","textAlign"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,KAApB,EAA2BC,MAA3B,QAAwC,kBAAxC;;;;;;;;IAGqBC,M;;;;;;;;;;;;;wCAEG,CACnB;;;6BAEQ;AACT,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AAKC;;;;EAX+BP,KAAK,CAACQ,S;;SAArBJ,M;AAcrB,IAAMC,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,eAAe,EAAE;AADV,GADkB;AAI7BJ,EAAAA,MAAM,EAAE;AACJK,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,KAAK,EAAE,MAFH;AAGJC,IAAAA,OAAO,EAAE,EAHL;AAIJC,IAAAA,UAAU,EAAE,KAJR;AAKJC,IAAAA,SAAS,EAAE;AALP;AAJqB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport {withRouter, Route, Switch} from 'react-router-dom';\nimport { Alert, StyleSheet, Text, View, TextInput, Button } from 'react-native';\n\nexport default class Routes extends React.Component {\n\n    componentDidMount() {\n    }\n\n    render() {\n    return (\n        <View style={styles.container}>\n            <Text style={styles.header}>App Name</Text>\n        </View>\n    )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#FF6600',\n    },\n    header: {\n        fontSize: 36,\n        color: '#fff',\n        padding: 30,\n        fontWeight: '700',\n        textAlign: 'center',\n    }\n  });"]},"metadata":{},"sourceType":"module"}